{"version":3,"sources":["reducers/index.js","actions/index.js","components/registerform.jsx","pages/registerpage.jsx","components/eventbox.jsx","components/grid.jsx","components/addevent.jsx","pages/homepage.jsx","serviceWorker.js","index.js"],"names":["defaultState","grid","events","info","eventId","getWeeks","date","birthdate","newDate","Date","Birthdate","weeks","getFullYear","setFullYear","Math","floor","getTime","state","arguments","length","undefined","action","type","newState","Object","objectSpread","console","log","weekno","payload","lastweek","event","id","name","color","week","push","data","i","basicState","lifeWeeks","lifespan","currentWeek","now","gridbox","class","tooltiptext","generateBasicState","addEvent","createGrid","RegisterForm","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","preventDefault","property","target","value","setState","form","defineProperty","handleSubmit","dispatch","redirect","username","inherits","createClass","key","react_default","a","createElement","onSubmit","onChange","Component","connect","Infopage","redirecttohome","react_router","to","className","registerform","Eventbox","eventinfo","style","background","eventdata","map","item","getEventsById","eventIds","element","ownProps","Grid","index","components_eventbox","AddEvent","Homepage","components_addevent","src_components_grid","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","store","createStore","rootReducer","render","es","react_router_dom","path","component","Registerpage","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.517618cf.chunk.js","sourcesContent":["const defaultState = {\n  grid : [],\n  events : [], \n  info : {}\n}\nvar eventId = -1 ;\nconst getEventId = ( ) => {\n  return ++eventId\n}\nconst getWeeks = (date,birthdate) => {\n  let newDate = new Date(date)\n  let Birthdate = new Date(birthdate)\n  let weeks = (newDate.getFullYear() - Birthdate.getFullYear())*52\n  Birthdate.setFullYear(newDate.getFullYear())\n  weeks +=  Math.floor((newDate.getTime() - Birthdate.getTime())/(1000*60*60*24*7))\n  return weeks\n}\nconst generateBasicState = (data) => {\n  let basicState = {\n    grid : [],\n    events : [],\n    info : data\n  }\n  //Generating grid \n  let i;\n  let lifeWeeks = data.lifespan*52;\n  basicState.info.lastweek = lifeWeeks\n  let currentWeek = getWeeks(Date.now(),data.birthdate)\n\n  for(i=0;i<lifeWeeks;++i){\n    let gridbox = {\n      class : 'eventbox tooltip ',\n      color : '',\n      events : [],\n      tooltiptext : 'week : ' + i + ' \\n',\n    }\n  \n    if(i==currentWeek){\n      gridbox.class += 'present '\n    }\n    if(i<currentWeek){\n      gridbox.class += 'past '\n    }\n    else if(i>currentWeek){\n      gridbox.class += 'future '\n    }\n    \n\n    if(i%52 === 0){\n      gridbox.class += 'birthday '\n      if(i<currentWeek){\n        gridbox.tooltiptext += 'you became ' + i/52 + '\\n'\n      }\n      else{\n        gridbox.tooltiptext += 'you will be ' + i/52 + '\\n'\n      }\n    }\n    basicState.grid.push(gridbox)\n  }\n\n  return basicState\n}\nconst events = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD_EVENT':\n      let newState = {...state}\n      if(state === defaultState){\n        console.log('complete registration');\n        return state\n      }\n      let weekno = getWeeks(action.payload.date,newState.info.birthdate)\n      if(weekno >= state.info.lastweek || weekno < 0 ){\n        console.log('haha you cant hack me')\n        return state\n      }\n      //adding event in events array\n      let event = {\n        id : getEventId(),\n        name : action.payload.name,\n        date : action.payload.date,\n        color : action.payload.color,\n        week : weekno\n      } \n      newState.events.push(event);\n      console.log('event added', event)\n      //updating gridbox based on the event \n      let gridbox = newState.grid[weekno]\n      gridbox.events.push(eventId);\n      return newState\n    case 'CREATE_GRID':\n      const basicState = generateBasicState(action.payload)\n      return basicState\n    default:\n      return state\n  }\n}\nexport default events\n\n\n","export const addEvent = (payload) => ({\n  type: 'ADD_EVENT',\n  payload\n})\n\nexport const createGrid = (payload) => ({\n  type : 'CREATE_GRID',\n  payload\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createGrid } from '../actions'\n\nexport class RegisterForm extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      form : {\n        username : 'dhruv',\n        birthdate : '1998-05-15',\n        lifespan : 100,\n      }\n    }\n  }\n  handleChange = event => {\n    event.preventDefault();\n    let property = event.target.name\n    let value = event.target.value\n    this.setState({\n      form : { \n        ...this.state.form, \n        [property] : value\n      }\n    })\n  }\n  handleSubmit = event => {\n    event.preventDefault();   \n    this.props.dispatch(createGrid(this.state.form))\n    this.props.redirect();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n            <div>\n              <label>Username</label>\n              <input \n                type='text' \n                name='username' \n                value={this.state.form.username} \n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <div>\n              <label>Birthdate</label>\n              <input \n                type='date' \n                name='birthdate' \n                value={this.state.form.birthdate} \n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <div>\n              <label>lifespan</label>\n              <input \n                type='number'\n                name='lifespan'\n                value={this.state.form.lifespan}\n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <input id='submit' type='submit'></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect()(RegisterForm)","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport RegisterForm from '../components/registerform'\n\nclass Infopage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      redirecttohome : false\n    }\n  }\n  redirect = () => {\n    this.setState({\n      redirecttohome : true\n    })\n  }\n  render() {\n    if(this.state.redirecttohome === true){\n      return <Redirect to='/home'/>\n    }\n    return (\n      <div className=\"register-page\">\n        <RegisterForm redirect={this.redirect}/>\n      </div>\n    );\n  }\n}\n\nexport default Infopage;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport './eventbox.css'\n\nclass Eventbox extends Component {\n  render(){\n    let className = this.props.data.class\n    let eventinfo = this.props.data.tooltiptext \n    let style = {\n      background : ''\n    }\n    eventinfo  += this.props.eventdata.map(item  => {\n      if(item){\n        return item.date + \":\" + item.name + \"\\n\"\n      }\n    })\n    if(this.props.eventdata.length > 0){\n      if(this.props.eventdata.length > 1){\n        className += 'multi-event '\n      }\n      else{\n        className += 'single-event '\n        style.background = this.props.eventdata[0].color\n      }\n    }\n    console.log('eventbox=rendered');\n    return (\n      <div className={className} style = {style} >\n        <div className=\"tooltiptext\">{eventinfo}</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  eventdata :  getEventsById(state.events,ownProps.data.events)\n});\n\nconst getEventsById = (events , eventIds ) => {\n  let eventdata = eventIds.map(element => {\n    return events[element]\n  })\n  return eventdata\n}\nexport default connect(mapStateToProps)(Eventbox);","import React, { Component } from 'react'\nimport Eventbox from './eventbox'\nimport { connect } from 'react-redux';\nimport './grid.css'\nclass Grid extends Component {\n    \n  render() {\n    console.log('grid=rendered');\n      let grid = this.props.grid.map((item,index) => {  \n            return <Eventbox key={index} data={item}/>\n      })\n    return (\n      <div className=\"grid-box\">     \n        {grid} \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    grid: state.grid\n  }\n}\nexport default connect(mapStateToProps, null)(Grid)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addEvent } from '../actions'\nimport './addevent.css'\nexport class AddEvent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      form : {\n        name : '',\n        date : '',\n        color : '#ffffff',\n      }\n    }\n  }\n  handleChange = event => {\n    event.preventDefault();\n    let property = event.target.name\n    let value = event.target.value\n    this.setState({\n      form : { \n        ...this.state.form, \n        [property] : value\n      }\n    })\n  }\n  handleSubmit = event => {\n    event.preventDefault();   \n    this.props.dispatch(addEvent(this.state.form))\n  }\n  render() {\n    return (\n      <div >\n        <form className=\"add-event\" onSubmit={this.handleSubmit}>\n            <div>\n              <h3>Add event</h3>\n            </div>\n            <div>\n              <label>Name</label>\n              <input \n                type='text' \n                name='name' \n                value={this.state.form.name} \n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <div>\n              <label>Date</label>\n              <input \n                type='date' \n                name='date' \n                value={this.state.form.date} \n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <div>\n              <label>Color</label>\n              <input \n                type='color'\n                name='color'\n                value={this.state.form.color}\n                onChange={this.handleChange}>\n              </input>\n            </div>\n            <input id='submit' type='submit'></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect()(AddEvent)","import React, { Component } from 'react';\nimport Grid from '../components/grid'\nimport AddEvent from '../components/addevent'\nimport './homepage.css';\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='header'>\n          <h1>One-Page Journal</h1>\n          <AddEvent/>\n        </div>\n        <Grid/>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n//redux-related imports\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n//pages\nimport Registerpage from './pages/registerpage';\nimport Homepage from './pages/homepage'\n//styles\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nconst store= createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/register\" component={Registerpage} />\n      <Route path=\"/home\" component={Homepage} />\n  </Router>\n  </Provider>\n  , document.getElementById('root')\n)\n\nserviceWorker.register()\n/*\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nrender(\n    <ApolloClient client={client}>\n    <App/>\n  </ApolloClient>\n  ,document.getElementById('root')\n)\n*/"],"sourceRoot":""}